;;;
; Default ini configuration for OpenConext EngineBlock.
;
; You can override this in /etc/openconext/engineblock.ini.
;
; Editting Rules:
; 1. The first rule of INI files is, you do not talk about INI files.
; 2. The second rule of INI files is is, you DO NOT talk about INI files.
; 3. Names in camelCase (note first character is lowerCase)
; 4. Every configuration item should be present and documented for in application/configs/application.ini
; 5. If this is your first time editing an INI file, have fun!
;;;
[base]

;; Functional Testing Switch
;functionalTesting = true

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;; PHP SETTINGS ;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

phpSettings.memory_limit    = "128M"
phpSettings.display_errors  = false
phpSettings.error_reporting = 6135 ; E_ALL - E_NOTICES

; Timezone to use, for a list of supported timezones, please go to:
; http://www.php.net/manual/en/timezones.php
phpSettings.date.timezone = "Europe/Amsterdam"

; The 'From' header when sending with the PHP 'mail' function.
; http://php.net/manual/en/function.mail.php
phpSettings.sendmail_from = "OpenConext EngineBlock <openconext-engineblock@openconext.org>"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;; FEATURE SETTINGS ;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; EngineBlock API feature toggles (off by default)
;engineApi.features.metadataPush = 1
;engineApi.features.consentListing = 1
;engineApi.features.metadataApi = 1

; Whether or not the LDAP should be used as secondary
; backend for the UserDirectory (database is considered
; primary).
;engineblock.feature.ldap_integration = 1

;; EngineBlock response capability feature toggles (on, safe by default)
engineblock.feature.encrypted_assertions = 1
engineblock.feature.encrypted_assertions_require_outer_signature = 1

;; Cutoff point for showing unfiltered IdPs on the WAYF.
; Do not show unfiltered IdPs on the WAYF if there are more IdPs than the cutoff point.
; wayf.cutoffPointForShowingUnfilteredIdps = 50

;; Settings for detecting whether the user is stuck in a request loop within his session
;engineblock.timeFrameForAuthenticationLoopInSeconds = 60
;engineblock.maximumAuthenticationCyclesAllowed = 5

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;; SAML2 SETTINGS ;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; The Signing / Encryption keys used for the SAML2 authentication and metadata
; When EngineBlock signs responses (when it acts as an Idp)
; or requests (when it acts as an SP) it uses these X.509 certs.
encryption.keys.default.publicFile = "/etc/openconext/engineblock.crt"
encryption.keys.default.privateFile = "/etc/openconext/engineblock.key"

; Additional keys for easy key rollover
; encryption.keys.KEYID.publicFile = "/etc/openconext/engineblock.KEYID.crt"
; encryption.keys.KEYID.privateFile = "/etc/openconext/engineblock.KEYID.key"

; Setting the debug mode to true will cause EngineBlock to display more information
; about errors that have occurred and it will show the messages it sends and receives
; for the authentication.
; NEVER TURN THIS ON FOR PRODUCTION
debug = false

; The name of the table that should be used to store user consent
; to release attributes from an Idp to a specific SP
authentication.consent.database.table = "consent"
; Store attributes with their values, meaning that if an Idp suddenly
; sends a new value (like a new e-mail address) consent has to be
; given again.
authentication.consent.storeValues = true

; Where EngineBlock can look for attribute definitions.
; These determine:
; * How attributes are displayed in Profile and Consent
; * How attributes are Normalized and Denormalized
; * How attributes are validated
attributeDefinitionFile = ENGINEBLOCK_FOLDER_APPLICATION "configs/attributes-v2.2.0.json"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;; LOGGING / ERROR HANDLING ;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Logging configuration
; Note that we have the following priorities:
; EMERGENCY: system is unusable
; ALERT: action must be taken immediately
; CRITICAL: critical conditions
; ERROR: error conditions
; WARNING: warning conditions
; NOTICE: normal but significant condition
; INFO: informational messages
; DEBUG: debug messages
logger.factory = "EngineBlock_Log_MonologLoggerFactory"
logger.conf.name = "engineblock"
logger.conf.handlers = "fingers_crossed"
logger.conf.handler.syslog.factory = "EngineBlock_Log_Monolog_Handler_SyslogHandlerFactory"
logger.conf.handler.syslog.conf.ident = "EBLOG"
logger.conf.handler.syslog.conf.formatter.factory = "EngineBlock_Log_Monolog_Formatter_AdditionalInfoLineFormatterFactory"
logger.conf.handler.syslog.conf.formatter.conf.format = "[%datetime%] %channel%.%level_name%: %message% %extra% %context%"
logger.conf.handler.fingers_crossed.factory = "EngineBlock_Log_Monolog_Handler_FingersCrossedHandlerFactory"
logger.conf.handler.fingers_crossed.conf.handler = "syslog"
logger.conf.handler.fingers_crossed.conf.passthru_level = "NOTICE"
logger.conf.handler.fingers_crossed.conf.activation_strategy.factory = "EngineBlock_Log_Monolog_Handler_FingersCrossed_ManualOrErrorLevelActivationStrategyFactory"
logger.conf.handler.fingers_crossed.conf.activation_strategy.conf.action_level = "ERROR"
logger.conf.processor.request_id.factory = "EngineBlock_Log_Monolog_Processor_RequestIdProcessorFactory"
logger.conf.processor.session_id.factory = "EngineBlock_Log_Monolog_Processor_SessionIdProcessorFactory"

; When an exception occurs during dispatching (probably in a controller)
; and the Dispatcher has been told to use error handling (on by default)
; it will render the following when an error has occurred.
error.module            = "Default"
error.controller        = "Error"
error.action            = "Display"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;; LDAP SETTINGS ;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; A feature toggle for the use of LDAP can be found under
; the FEATURE SETTINGS section.

; LDAP configuration details for provisioning
; See Zend_LDAP documentation.
; http://framework.zend.com/manual/en/zend.ldap.html
ldap.host               = ""
ldap.useSsl             = false
ldap.userName           = "cn=engine,dc=surfconext,dc=nl"
ldap.password           = ""
ldap.bindRequiresDn     = true
ldap.accountDomainName  = ""
ldap.baseDn             = "dc=surfconext,dc=nl"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;; DATABASE SETTINGS ;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

database.host = localhost
database.port = 3306
database.password = "secret"
database.user = "ebrw"
database.dbname = eb

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;; SERVICEREGISTRY SETTINGS ;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Where can EngineBlock get the metadata from on the entities that it should know?
; You can override this in /etc/openconext/engineblock.ini but by default this will
; first look in the database (using the Doctrine Metadata Repository)
; next query the legacy Janus 'REST' (v1) API.
;metadataRepository.database.type = Doctrine
;metadataRepositories[0] = database
metadataRepository.janus.type = JanusRestV1
metadataRepositories[0] = janus

; ; Example on how to read from a Stoker repository too:
; metadataRepository.stoker.type = Stoker
; metadataRepository.stoker.path = /var/cache/openconext/stoker/edugain
; ; Ordering is significant here, first repository to find an entity will win.
; metadataRepositories[1] = stoker


; URL to the Janus REST interface
serviceRegistry.location    = ""
serviceRegistry.user        = ""
serviceRegistry.user_secret = ""
; Caching options for the Service Registry
serviceRegistry.caching.backend.name = "File"
serviceRegistry.caching.backend.options.file_name_prefix = "eb_sr_cache"
serviceRegistry.caching.backend.options.lifetime = 1;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;; EngineBlock API credentials ;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Feature toggles for the API can be found under
; the FEATURE SETTINGS section.

; Username and password for engine-api usage.
; DEPRECATED, use the newer version below
;engineApi.user     = API USER
;engineApi.password = RANDOM PASSWORD HERE

;; New API user config, allows for configuration of multiple different users
;engineApi.users.janus.username = "some user"
;engineApi.users.janus.password = "some password"
;engineApi.users.profile.username = "some user"
;engineApi.users.profile.password = "some password"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;; PDP SETTINGS ;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Location of PDP
pdp.baseUrl = "https://pdp.surfconext.nl/decide/policy"

; PDP uses basic auth
pdp.username = "pdp_admin"
pdp.password = "secret"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;; ATTRIBUTE AGGREGATION SETTINGS ;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Location of AA
attributeAggregation.baseUrl = "https://aa.surfconext.nl/aa/api/attribute/aggregate"

; AA uses basic auth
attributeAggregation.username = "eb"
attributeAggregation.password = "secret"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;; MISCELLANEOUS SETTINGS ;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Minimum execution time in milliseconds when a received response is deemed invalid (default: 5000 ms)
minimumExecutionTimeOnInvalidReceivedResponse = 5000

; the value for guest qualifier. Can be overridden for specific non-surfnet environments
addgueststatus.guestqualifier = "urn:collab:org:surf.nl"

; Language Cookie settings
cookie.lang.domain = ".surfconext.nl"
; Cookie expiry time, specify the time in seconds, set empty to let the cookie get expired after the session
cookie.lang.expiry = 5184000 ; 60 days in seconds

; Skip the asset compiling and use the source .js files.
dynamicAssets = false

defaults.title      = "SURFconext"
defaults.header     = "SURFconext"
defaults.subheader  = ""
defaults.layout     = "default"

; edugain metadata
edugain.publication.publisher = "https://engine.surfconext.nl/authentication/proxy/edugain-metadata"
edugain.publication.policy = "http://www.edugain.org/policy/metadata-tou_1_0.txt"
edugain.registration.authority = "http://www.surfconext.nl/"
edugain.registration.policy = "https://wiki.surfnet.nl/display/eduGAIN/EduGAIN"
edugain.termsOfUse = "Use of this metadata is subject to the Terms of Use at http://www.edugain.org/policy/metadata-tou_1_0.txt"

; Do we send welcome emails
email.sendWelcomeMail = false

; The default email where IdP request access are send
email.help = "help@surfconext.nl"

; Where to send IdP debugging mail
;email.idpDebugging.to.address = "surfconext-beheer@surfnet.nl"
email.idpDebugging.from.name  = "SURFconext EngineBlock"
email.idpDebugging.from.address = "noreply@surfnet.nl"
email.idpDebugging.to.address = "surfconext-beheer@surfnet.nl"
email.idpDebugging.to.name    = "SURFconext Beheer"
email.idpDebugging.subject    = "IdP debug info van %1$s"

; Set a fixed hostname for OpenConext EngineBlock to use.
;hostname = engine.demo.openconext.org

; terms of use surfconext
openconext.termsOfUse = "https://wiki.surfnet.nl/display/conextsupport/Terms+of+Service+%28EN%29"

; Which LDAP attribute to use as the primary identifier.
; EXPERT use only!
; Recommend only using one of the following possible values:
; 'collabpersonid', 'collabpersonuuid', 'edupersonprincipalname'
subjectIdAttribute = "collabpersonid"

; Configure trusted proxies to use their X-Forwarded-For header.
; trustedProxyIps[] = 192.168.1.1

; UI Options
ui.return_to_sp_link.active = false

;; Symfony specific variables
symfony.cachePath = "/tmp/engineblock/cache"
symfony.logPath = "/tmp/engineblock/logs"

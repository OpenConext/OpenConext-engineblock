;;;
; Default ini configuration for OpenConext EngineBlock.
;
; You can override this in /etc/openconext/engineblock.ini.
;
; Editting Rules:
; 1. The first rule of INI files is, you do not talk about INI files.
; 2. The second rule of INI files is is, you DO NOT talk about INI files.
; 3. Names in camelCase (note first character is lowerCase)
; 4. Every configuration item should be present and documented for in application/configs/application.ini
; 5. If this is your first time editing an INI file, have fun!
;;;
[base]

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;; PHP SETTINGS ;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

phpSettings.memory_limit    = "128M"
phpSettings.display_errors  = false
phpSettings.error_reporting = 6135 ; E_ALL - E_NOTICES

; Timezone to use, for a list of supported timezones, please go to:
; http://www.php.net/manual/en/timezones.php
phpSettings.date.timezone = "Europe/Amsterdam"

; The 'From' header when sending with the PHP 'mail' function.
; http://php.net/manual/en/function.mail.php
phpSettings.sendmail_from = "OpenConext EngineBlock <openconext-engineblock@openconext.org>"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;; SAML2 SETTINGS ;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; The Signing / Encryption keys used for the SAML2 authentication and metadata
; When EngineBlock signs responses (when it acts as an Idp)
; or requests (when it acts as an SP) it uses these X.509 certs.
encryption.keys.default.publicFile = "/etc/openconext/engineblock.crt"
encryption.keys.default.privateFile = "/etc/openconext/engineblock.key"

; Additional keys for easy key rollover
; encryption.keys.KEYID.publicFile = "/etc/openconext/engineblock.KEYID.crt"
; encryption.keys.KEYID.privateFile = "/etc/openconext/engineblock.KEYID.key"

; Setting the debug mode to true will cause EngineBlock to display more information
; about errors that have occurred and it will show the messages it sends and receives
; for the authentication.
; NEVER TURN THIS ON FOR PRODUCTION
debug = false

; The name of the table that should be used to store user consent
; to release attributes from an Idp to a specific SP
authentication.consent.database.table = "consent"
; Store attributes with their values, meaning that if an Idp suddenly
; sends a new value (like a new e-mail address) consent has to be
; given again.
authentication.consent.storeValues = true

; Where EngineBlock can look for attribute definitions.
; These determine:
; * How attributes are displayed in Profile and Consent
; * How attributes are Normalized and Denormalized
; * How attributes are validated
attributeDefinitionFile = ENGINEBLOCK_FOLDER_APPLICATION "configs/attributes-v2.2.0.json"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;; PROFILE AUTH SETTINGS ;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; The configuration entries below are for protecting the profile interface using SimpleSamlphp
; EntityID for the IdentityProvider
auth.simplesamlphp.idp.entityId   = ""

; SingleSignOnLocation to use
auth.simplesamlphp.idp.location   = ""

; SAML2 binding to use
auth.simplesamlphp.idp.binding    = "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect"

; Path to file with PEM encoded public key / certificate for Identity Provider
auth.simplesamlphp.idp.certificate= "/etc/openconext/engineblock.crt"

; Password for admin functionality
; Note "123" means no access
auth.simplesamlphp.adminPassword  = "123"
auth.simplesamlphp.secretSalt     = f4afad5d6fisoaaif6s6ida4ii6o6fsf
auth.simplesamlphp.technicalContactName = 'OpenConext Admin'
auth.simplesamlphp.technicalContactEmail = 'admin@openconext.example.edu'

profile.simplesamlphp.baseurlpath = "simplesaml/"
engine.simplesamlphp.baseurlpath = "simplesaml/"
; The hostname (provided by the Apache VHost) must start with the following to use profile.simplesamlphp.baseurlpath
; Note that this defaults to "anything that starts with profile", you could restrict this further to say
; "profile.demo.openconext.org"
profile.simplesamlphp.hostMatch = "profile."

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;; LOGGING / ERROR HANDLING ;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Logging configuration, see also Zend_Log documentation.
; http://framework.zend.com/manual/en/zend.log.html
; Note that we have the following priorities:
; 0 Emergency: system is unusable
; 1 Alert: action must be taken immediately
; 2 Critical: critical conditions
; 3 Error: error conditions
; 4 Warning: warning conditions
; 5 Notice: normal but significant condition
; 6 Informational: informational messages
; 7 Debug: debug messages

; The queue log writer collects all log messages in session
; and flushes them when an error or exception is handled or
; then the 'coin:additional_logging' option is set for an
; idp or sp
logs.syslog-queue.writerName = "Queue" ; Queue writes everything to below writers on error
logs.syslog-queue.writerNamespace = "EngineBlock_Log_Writer"

; The option 'targetLog' can be set to any log writer(s)
; desired. Currently EngineBlock_Log_Writer_Syslog is used;
; it escapes newlines and splits all messages larger than 1K.
logs.syslog-queue.writerParams.targetLog.syslog.writerName = "Syslog"
logs.syslog-queue.writerParams.targetLog.syslog.writerNamespace = "EngineBlock_Log_Writer"
logs.syslog-queue.writerParams.targetLog.syslog.writerParams.application = "EBLOG"
logs.syslog-queue.filterName = "Priority"
logs.syslog-queue.filterParams.priority = 7

; See: http://nl.php.net/manual/en/function.openlog.php
; Defaults to LOG_USER.
; Note this is a constant so MUST not be wrapped in quotes.
;logs.syslog-queue.writerParams.targetLog.syslog.writerParams.facility = LOG_USER

; Examples:
;logs.file.writerName = "Stream"
;logs.file.filterName = "Priority"
;logs.file.writerParams.stream = "/var/log/openconext/engineblock.log"
;logs.file.filterParams.priority = 7 ; Everything

;logs.mail.writerName = "Mail"
;logs.mail.writerNamespace = "EngineBlock_Log_Writer"
;logs.mail.filterName = "Priority"
;logs.mail.filterParams.priority = 4 ; Warnings
;logs.mail.writerParams.from.email = "manage@example.edu"
;logs.mail.writerParams.from.name  = "SURFconext EngineBlock"
;logs.mail.writerParams.to.0.name  = "Sysadmin"
;logs.mail.writerParams.to.0.email = "sysadmin@example.edu"
;logs.mail.writerParams.cc.0.name  = "Developer"
;logs.mail.writerParams.cc.0.email = "developer@example.edu"
; Valid transports: Smtp, Pop3, Imap
;logs.mail.writerParams.transportName = "Smtp"
;logs.mail.writerParams.transportParams.host = "localhost"
;logs.mail.writerParams.transportParams.port = 25
;logs.mail.writerParams.transportParams.ssl = "SSL" ; Also supported: "TLS"
; SMTP authentication, supported: Login, Crammd5, Plain
;logs.mail.writerParams.transportParams.auth = "Login"
;logs.mail.writerParams.transportParams.username = ""
;logs.mail.writerParams.transportParams.password = ""
; Filter the following values from the (unsecured) mail
; Note that this is done with a simple search and replace,
; so better make sure the values are unique enough!
;logs.mail.writerParams.filterValues[] = "encryption.key.private"
;logs.mail.writerParams.filterValues[] = "ldap.password"
;logs.mail.writerParams.filterValues[] = "database.master1.password"
;logs.mail.writerParams.filterValues[] = "database.slave1.password"
;logs.mail.writerParams.filterValues[] = "serviceRegistry.user_secret"

; When an exception occurs during dispatching (probably in a controller)
; and the Dispatcher has been told to use error handling (on by default)
; it will render the following when an error has occurred.
error.module            = "Default"
error.controller        = "Error"
error.action            = "Display"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;; LDAP SETTINGS ;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; LDAP configuration details for provisioning
; See Zend_LDAP documentation.
; http://framework.zend.com/manual/en/zend.ldap.html
ldap.host               = ""
ldap.useSsl             = false
ldap.userName           = "cn=engine,dc=surfconext,dc=nl"
ldap.password           = ""
ldap.bindRequiresDn     = true
ldap.accountDomainName  = ""
ldap.baseDn             = "dc=surfconext,dc=nl"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;; DATABASE SETTINGS ;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Database masters are servers that can used for reading & writing
; Database slaves are servers that can used only for reading
; Define your servers on database.servername
; then add them to the proper pool, like database.masters[] = "servername"
; For DSN syntax, see PDO documentation
; http://www.php.net/manual/en/pdo.construct.php
database.master1.dsn = ""
database.master1.user = "engineblock"
database.master1.password = ""
;database.master1.use_persistent = true
;database.masters[] = "master1"

database.slave1.dsn = ""
database.slave1.user = "engineblock"
database.slave1.password = ""
;database.slave1.use_persistent = true
;database.slaves[] = "slave1"


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;; MEMCACHE SETTINGS ;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;memcache.locahost.host            = "localhost"
;memcache.localhost.port           = 11211
;memcache.localhost.persistent     = true
;memcache.localhost.weight         = 1
;memcache.localhost.timeout        = 1
;memcache.localhost.retry_interval = 15
;memcache.servers[] = "localhost"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;; SERVICEREGISTRY SETTINGS ;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Where can EngineBlock get the metadata from on the entities that it should know?
; You can override this in /etc/openconext/engineblock.ini but by default this will
; first look in the database (using the Doctrine Metadata Repository)
; next query the legacy Janus 'REST' (v1) API.
;metadataRepository.database.type = Doctrine
;metadataRepositories[0] = database
metadataRepository.janus.type = JanusRestV1
metadataRepositories[0] = janus

; ; Example on how to read from a Stoker repository too:
; metadataRepository.stoker.type = Stoker
; metadataRepository.stoker.path = /var/cache/openconext/stoker/edugain
; ; Ordering is significant here, first repository to find an entity will win.
; metadataRepositories[1] = stoker


; URL to the Janus REST interface
serviceRegistry.location    = ""
serviceRegistry.user        = ""
serviceRegistry.user_secret = ""
; Caching options for the Service Registry
serviceRegistry.caching.backend.name = "File"
serviceRegistry.caching.backend.options.file_name_prefix = "eb_sr_cache"
serviceRegistry.caching.backend.options.lifetime = 1;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;; API VO VALIDATION SETTINGS ;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Base URL that engineblock can use to validate that a given use belongs to a given Virtual Organization.
api.vovalidate.baseUrl = "https://api.demo.openconext.org"
api.vovalidate.key = "oauth_key"
api.vovalidate.secret = "oauth_secret"


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;; EngineBlock API credentials ;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Username and password for engine-api usage.
engineApi.user = janus-ssp
;engineApi.password = RANDOM PASSWORD HERE


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;; MISCELLANEOUS SETTINGS ;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; the value for guest qualifier. Can be overridden for specific non-surfnet environments
addgueststatus.guestqualifier = "urn:collab:org:surf.nl"

; Language Cookie settings
cookie.lang.domain = ".surfconext.nl"
; Cookie expiry time, specify the time in seconds, set empty to let the cookie get expired after the session
cookie.lang.expiry = 5184000 ; 60 days in seconds

; Skip the asset compiling and use the source .js files.
dynamicAssets = false

defaults.title      = "SURFconext"
defaults.header     = "SURFconext"
defaults.subheader  = ""
defaults.layout     = "default"

; edugain metadata
edugain.publication.publisher = "https://engine.surfconext.nl/authentication/proxy/edugain-metadata"
edugain.publication.policy = "http://www.edugain.org/policy/metadata-tou_1_0.txt"
edugain.registration.authority = "http://www.surfconext.nl/"
edugain.registration.policy = "https://wiki.surfnet.nl/display/eduGAIN/EduGAIN"
edugain.termsOfUse = "Use of this metadata is subject to the Terms of Use at http://www.edugain.org/policy/metadata-tou_1_0.txt"

; Do we send welcome emails
email.sendWelcomeMail = false

; The default email where IdP request access are send
email.help = "help@surfconext.nl"

; Where to send IdP debugging mail
;email.idpDebugging.to.address = "surfconext-beheer@surfnet.nl"
email.idpDebugging.from.name  = "SURFconext EngineBlock"
email.idpDebugging.from.address = "noreply@surfnet.nl"
email.idpDebugging.to.address = "surfconext-beheer@surfnet.nl"
email.idpDebugging.to.name    = "SURFconext Beheer"
email.idpDebugging.subject    = "IdP debug info van %1$s"

; Set a fixed hostname for OpenConext EngineBlock to use.
;hostname = engine.demo.openconext.org

; terms of use surfconext
openconext.termsOfUse = "https://wiki.surfnet.nl/display/conextsupport/Terms+of+Service+%28EN%29"

; Profile URI settings
profile.protocol    = "https"
profile.host        = "profile.surfconext.nl"

; Which LDAP attribute to use as the primary identifier.
; EXPERT use only!
; Recommend only using one of the following possible values:
; 'collabpersonid', 'collabpersonuuid', 'edupersonprincipalname'
subjectIdAttribute = "collabpersonid"

; Configure trusted proxies to use their X-Forwarded-For header.
; trustedProxyIps[] = 192.168.1.1

; UI Options
ui.return_to_sp_link.active = false
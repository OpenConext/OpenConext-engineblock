<project name="OpenConext EngineBlock" default="build">

    <target name="build" depends="test-suites,code-quality,functional-tests,security-tests" />
    <target name="pre-commit" depends="test-suites,api-functional-tests,code-quality" />
    <target name="pre-push" depends="test-suites,code-quality,behat-dev-wip,security-tests" />
    <target name="functional-tests" depends="api-functional-tests,behat-travis" />
    <target name="functional-tests-wip" depends="behat-travis-wip" />
    <target name="functional-tests-selenium" depends="behat-travis-selenium"/>
    <target name="code-quality-ci" depends="test-suites,code-quality,npm-lint,doc-header"/>
    <target name="code-quality" depends="php-lint,phpmd,phpcs,phpcs-legacy,doc-header"/>
    <target name="security-tests" depends="security-checker,npm-audit" />
    <target name="test-suites" depends="eb4-tests,unit-tests,integration-tests,js-unit-tests,js-smoke-tests"/>
    <target name="validate" depends="composer-validate"/>

    <target name="install-git-hooks"
            description="installs the pre-commit and pre-push hooks for git">
        <copy file="${basedir}/ci/dev/pre-commit.dist" tofile="${basedir}/.git/hooks/pre-commit"/>
        <copy file="${basedir}/ci/dev/pre-push.dist" tofile="${basedir}/.git/hooks/pre-push"/>
        <chmod file="${basedir}/.git/hooks/pre-commit" perm="a+x,g-w"/>
        <chmod file="${basedir}/.git/hooks/pre-push" perm="a+x,g-w"/>
    </target>

    <target name="get-changeset.php.raw"
            description="creates a list of changed php files separated by newline">
        <pathconvert property="changeset.php.raw" pathsep="${line.separator}">
            <fileset dir="src">
                <include name="**/*.php"/>
                <modified/>
            </fileset>
        </pathconvert>

        <!--Check if files are modified-->
        <condition property="changeset.php.notempty">
            <not>
                <equals arg1="${changeset.php.raw}" arg2="" trim="true"/>
            </not>
        </condition>
    </target>

    <target name="get-changeset.php.spacesep" depends="get-changeset.php.raw" if="changeset.php.notempty"
            description="Creates a quoted list of changed php files separated by spaces">
        <loadresource property="changeset.php.spacesep">
            <propertyresource name="changeset.php.raw"/>
            <filterchain>
                <tokenfilter delimoutput=" ">
                    <linetokenizer/>
                    <replaceregex pattern="^" replace='"'/>
                    <replaceregex pattern="$" replace='"'/>
                </tokenfilter>
            </filterchain>
        </loadresource>
    </target>

    <target name="php-lint" depends="get-changeset.php.spacesep" if="changeset.php.notempty"
            description="Perform syntax check of sourcecode files in parallel">
        <exec executable="sh" failonerror="true">
            <arg value="-c"/>
            <arg value="echo '${changeset.php.spacesep}' | xargs -n 1 -P 4 php -l 1>/dev/null"/>
        </exec>
        <echo message="OK"/>
    </target>

    <target name="phpmd"
            description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
        <exec executable="vendor/bin/phpmd" failonerror="true">
            <arg path="src"/>
            <arg value="text"/>
            <arg value="ci/qa-config/phpmd.xml"/>
            <arg value="--exclude"/>
            <arg value="*/Tests/*"/>
        </exec>
    </target>

    <target name="phpcs"
            description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
        <exec dir="${basedir}" executable="vendor/bin/phpcs" failonerror="true">
            <arg value="--report=full" />
            <arg value="--standard=ci/qa-config/phpcs.xml" />
            <arg value="--warning-severity=0" />
            <arg value="--extensions=php" />
            <arg path="src" />
        </exec>
    </target>

    <target name="phpcs-legacy"
            description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
        <exec dir="${basedir}" executable="vendor/bin/phpcs" failonerror="true">

            <arg value="--standard=ci/qa-config/phpcs-legacy.xml" />
            <arg value="--warning-severity=0" />
            <arg value="--extensions=php" />
            <arg value="-s" />
            <arg path="library" />
        </exec>
    </target>

    <target name="phpcbf"
            description="Fix coding standard violations using PHP_CodeSniffer">
        <exec dir="${basedir}" executable="vendor/bin/phpcbf" failonerror="true">
            <arg value="--standard=ci/qa-config/phpcs.xml" />
            <arg value="--extensions=php" />
            <arg value="--no-patch" />
            <arg path="src" />
        </exec>
    </target>

    <target name="phpcompat"
            description="Check code compatibilty using PHP_CodeSniffer">
        <exec dir="${basedir}" executable="vendor/bin/phpcs" failonerror="true">
            <arg value="--standard=ci/qa-config/phpcompat.xml" />
            <arg value="--extensions=php" />
            <arg value="--runtime-set" />
            <arg value="testVersion" />
            <arg value="7.2-" />
            <arg path="src" />
        </exec>
        <exec dir="${basedir}" executable="vendor/bin/phpcs" failonerror="true">
            <arg value="--standard=ci/qa-config/phpcompat.xml" />
            <arg value="--extensions=php" />
            <arg value="--runtime-set" />
            <arg value="testVersion" />
            <arg value="7.2-" />
            <arg path="library" />
        </exec>
    </target>

    <target name="doc-header" description="Check if the copyright header is valid">
        <exec executable="vendor/bin/docheader" failonerror="true">
            <arg line="check src/ tests/ library/  --exclude-dir resources --exclude-dir languages" />
        </exec>
    </target>

    <target name="security-checker" description="Check for vulnerable dependencies with SensioLabs Security Checker">
        <exec dir="${basedir}" executable="vendor/bin/security-checker" failonerror="true">
            <arg value="security:check" />
        </exec>
    </target>

    <target name="npm-lint" description="Performs the linting of css and js">
        <exec dir="${basedir}/theme" executable="npm" failonerror="true">
            <arg line="run lint"/>
        </exec>
    </target>

    <target name="npm-audit" description="Run npm audit">
        <exec dir="${basedir}/theme" executable="npm" failonerror="true">
            <arg line="run audit"/>
        </exec>
    </target>

    <target name="eb4-tests" description="Run EB4 tests with PHPUnit">
        <delete dir="app/cache/test"/>
        <exec executable="vendor/bin/phpunit" failonerror="true">
            <arg line="--configuration=${basedir}/tests/phpunit.xml"/>
            <arg line="--testsuite=eb4"/>
            <arg line="--coverage-text"/>
        </exec>
    </target>

    <target name="unit-tests" description="Run unit tests with PHPUnit">
        <delete dir="app/cache/test"/>
        <exec executable="vendor/bin/phpunit" failonerror="true">
            <arg line="--configuration=${basedir}/tests/phpunit.xml"/>
            <arg line="--testsuite=unit"/>
            <arg line="--coverage-text"/>
        </exec>
    </target>

    <target name="integration-tests" description="Run integration tests with PHPUnit">
        <delete dir="app/cache/test"/>
        <exec executable="vendor/bin/phpunit" failonerror="true">
            <arg line="--configuration=${basedir}/tests/phpunit.xml"/>
            <arg line="--testsuite=integration"/>
        </exec>
    </target>

    <target name="js-unit-tests">
        <exec dir="${basedir}/theme" executable="node_modules/.bin/jest" failonerror="true">
            <env key="CHROME_BIN" value="/usr/bin/google-chrome" />
            <arg value="material/javascripts/tests/unit" />
        </exec>
    </target>

    <target name="js-smoke-tests">
        <exec dir="${basedir}/theme" executable="node_modules/.bin/jest" failonerror="true">
            <env key="CHROME_BIN" value="/usr/bin/google-chrome" />
            <arg line="--runInBand" />
            <arg line="material/javascripts/tests/smoke" />
        </exec>
    </target>

    <target name="js-visual-regression-tests">
        <exec dir="${basedir}/theme" executable="node_modules/.bin/jest" failonerror="true">
            <arg line="material/javascripts/tests/visual-regression" />
        </exec>
    </target>

    <target name="js-visual-regression-tests-update-snapshots">
        <exec dir="${basedir}/theme" executable="node_modules/.bin/jest" failonerror="true">
            <arg line="-u" />
            <arg line="material/javascripts/tests/visual-regression" />
        </exec>
    </target>

    <target name="api-functional-tests"
            description="Run functional tests with PHPUnit"
            depends="create-test-db">
        <delete dir="app/cache/test"/>
        <exec executable="vendor/bin/phpunit" failonerror="true">
            <arg line="--configuration=${basedir}/tests/phpunit.xml"/>
            <arg line="--testsuite=functional"/>
        </exec>
    </target>

    <target name="behat-dev">
        <echo message="${line.separator}${line.separator}Running Behat"/>
        <antcall target="run-behat">
            <param name="suite" value="default"/>
        </antcall>
    </target>

    <target name="behat-selenium-dev">
        <echo message="Starting a new selenium instance" />
        <antcall target="selenium-stop"/>
        <antcall target="selenium-start"/>
        <echo message="${line.separator}${line.separator}Running Behat"/>
        <antcall target="run-behat">
            <param name="suite" value="selenium"/>
        </antcall>
        <antcall target="selenium-stop"/>
    </target>

    <target name="behat-dev-wip">
        <echo message="${line.separator}${line.separator}Running Behat"/>
        <antcall target="run-behat">
            <param name="suite" value="wip"/>
        </antcall>
    </target>

    <target name="behat-travis"
            description="Run the functional testing suite">
        <antcall target="run-behat">
            <param name="suite" value="default"/>
        </antcall>
    </target>

    <target name="behat-travis-wip"
            description="Run the functional testing suite for features marked as WIP">
        <antcall target="run-behat">
            <param name="suite" value="wip"/>
        </antcall>
    </target>

    <target name="behat-travis-selenium"
            description="Run the functional testing suite for features marked as selenium with selenium">
        <antcall target="run-behat">
            <param name="suite" value="selenium"/>
        </antcall>
    </target>

    <target name="run-behat"
            description="Execute the behat test suite"
            depends="create-test-db">
        <exec executable="vendor/bin/behat" failonerror="true">
            <arg line="-c ./tests/behat.yml"/>
            <arg line="--suite ${suite} -vv"/>
            <arg line="--format progress"/>
            <arg line="--strict"/>
        </exec>
    </target>

    <target name="create-test-db">
        <exec executable="app/console" failonerror="true">
            <arg line="doctrine:schema:drop --force --env=test" />
        </exec>
        <exec executable="app/console" failonerror="true">
            <arg line="doctrine:schema:create --env=test" />
        </exec>
    </target>

    <target name="composer-validate"
            description="validate composer">
        <exec executable="composer" failonerror="true">
            <arg line="validate"/>
        </exec>
    </target>

    <target name="selenium-start"
            description="ensures that selenium is started">
        <exec executable="sudo" failonerror="true">
            <arg line="systemctl start selenium"/>
        </exec>
    </target>

    <target name="selenium-stop"
            description="ensures that selenium is stopped">
        <exec executable="sudo" failonerror="false">
            <arg line="systemctl stop selenium"/>
        </exec>
    </target>

</project>

<project name="COIN EngineBlock" default="build">
    <target name="build" depends="clean,prepare,lint,phpunit" />
    <target name="acceptance" depends="clean,prepare,behat" />
    <target name="report" depends="clean,prepare,parallel" />

    <target name="parallel">
        <parallel>
            <antcall target="phpcs" />
            <antcall target="phpmd" />
            <antcall target="phpcb" />
            <antcall target="phpcpd" />
            <antcall target="pdepend" />
        </parallel>
    </target>
 
    <target name="clean">
        <delete dir="${basedir}/build" />
    </target>
 
    <target name="prepare">
        <mkdir dir="${basedir}/build/logs" />
        <mkdir dir="${basedir}/build/logs/tests" />
        <mkdir dir="${basedir}/build/codebrowser" />
        <mkdir dir="${basedir}/build/coverage" />
        <mkdir dir="${basedir}/build/cpd" />
        <mkdir dir="${basedir}/build/dependencies" />
        <antcall target="composer" />
    </target>

    <target name="lint" description="Run syntax check for all classes" >
        <apply dir="${basedir}" executable="php" failonerror="true">
            <arg value="-l" />
            <fileset dir="${basedir}">
                <include name="**/*.php"/>
                <include name="**/*.html"/>
                <include name="**/*.phtml"/>
                <exclude name="vendor/**"/>
            </fileset>
        </apply>
    </target>

    <target name="behat" description="BDD Acceptance tests with Behat">
        <!-- First we do it so that we get jUnit XML for bamboo-->
        <exec dir="${basedir}" executable="vendor/bin/behat">
            <arg line="-f junit --out ${basedir}/build/logs/tests/" />
        </exec>
        <!-- Then we run it again, only this time we want output
        for in the logs and an exit code so Bamboo can fail the build if necessary -->
        <exec dir="${basedir}" executable="vendor/bin/behat" failonerror="true" />

    </target>

    <target name="composer">
        <!-- install vendor code -->
        <exec dir="${basedir}" executable="bin/composer.phar" failonerror="true">
            <arg line="install
                --dev" />
        </exec>
    </target>

    <target name="phpunit">
        <exec dir="${basedir}/tests" executable="../vendor/bin/phpunit" failonerror="true">
            <arg line="--log-junit ${basedir}/build/logs/tests/phpunit.xml
                       --coverage-clover ${basedir}/build/logs/clover.xml
                       --coverage-html ${basedir}/build/coverage
                       ." />
        </exec>
    </target>
    
    <target name="phpcs">
        <exec dir="${basedir}" executable="phpcs" failonerror="false" output="/dev/null">
            <arg line="--extensions=php --ignore=build,tests,library/Zend,library/shindig,library/Corto --standard=Zend --tab-width=4 --report=checkstyle --report-file=${basedir}/build/logs/checkstyle.xml ." />
        </exec>
    </target>
 
    <target name="phpmd">
        <exec dir="${basedir}" executable="phpmd" failonerror="false">
            <arg line=". xml codesize --reportfile ${basedir}/build/logs/pmd.xml" />
        </exec>
    </target>
 
    <target name="phpcpd">
        <exec dir="${basedir}" executable="phpcpd" failonerror="false">
            <arg line="--log-pmd ${basedir}/build/logs/pmd-cpd.xml --exclude build --exclude tests --exclude library/Zend --exclude library/shindig --exclude library/Corto ." />
        </exec>
        <exec dir="${basedir}/build/logs" executable="xsltproc" failonerror="false" output="${basedir}/build/cpd/index.html">
            <arg line="${basedir}/ci/cpd.xsl ${basedir}/build/logs/pmd-cpd.xml" />
        </exec>
    </target>
 
    <target name="pdepend">
        <exec dir="${basedir}" executable="pdepend" failonerror="false">
            <arg line="--jdepend-xml=${basedir}/build/logs/jdepend.xml
                       --jdepend-chart=${basedir}/build/dependencies/jdepend.svg
                       --overview-pyramid=${basedir}/build/dependencies/pyramid.svg
                       --exclude=build,tests,library/Zend,library/shindig,library/Corto
                       ." />
        </exec>
        <exec dir="${basedir}/build/dependencies" executable="cp" failonerror="false">
            <arg line="${basedir}/ci/dependencies.html index.html" />
        </exec>
    </target>
 
    <target name="phpcb">
        <exec dir="${basedir}" executable="phpcb" failonerror="false">
            <arg line="--log ${basedir}/build/logs --source ${basedir} --output ${basedir}/build/codebrowser" />
        </exec>
    </target>
</project>

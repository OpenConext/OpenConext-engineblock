/*******************************************************************
    Generic sass-mixins
 ******************************************************************/

@mixin appearance($value: none) {
    -moz-appearance: $value;
    -webkit-appearance: $value;
    appearance: $value;
}

@mixin remove-outline {
    outline: none;

    &:focus {
        outline: none;
    }
}

// Clear user-agent styles for button.
// If no background-color is set on the body element, use with a background-color.
// Else you'll see a grey background still in safari and IE.
@mixin button-reset($background-color: inherit) {
    @include appearance;
    background-color: $background-color;
    border: 0;
    font-family: inherit;
    font-size: 100%;
    padding: 0;
}

// Controls whether the user can select text
@mixin select($value: none) {
    -moz-user-select: $value;
    -ms-user-select: $value;
    -webkit-user-select: $value;
    user-select: $value;
}

// Do not use, use the helpers below
// Example usage: .sub-menu {
//  @include absolute(top 100% left 0 right 12px);
//}
@mixin position($position, $args) {
    @each $o in top right bottom left {
        $i: index($args, $o);
        @if $i and $i + 1 <= length($args) and type-of(nth($args, $i + 1)) == number {
            #{$o}: nth($args, $i + 1);
        }
    }
    position: $position;
}

// Positioning helpers
@mixin absolute($args: '') {
    @include position(absolute, $args);
}

@mixin fixed($args: '') {
    @include position(fixed, $args);
}

@mixin relative($args: '') {
    @include position(relative, $args);
}

// A whole lot of grid mixins below
// Ensure CSS grid works with IE 11 spec.
// sass-lint:disable no-vendor-prefixes, no-duplicate-properties
@mixin display-grid {
    display: -ms-grid;
    display: grid;
}

// $rows values should be delimited by a space
@mixin grid-template-rows($rows...) {
    -ms-grid-rows: $rows;
    grid-template-rows: $rows;
}

// $columns values should be delimited by a space
@mixin grid-template-columns($columns...) {
    -ms-grid-columns: $columns;
    grid-template-columns: $columns;
}

// Can be used in combination with above grid-template-X mixins.
// These result in the same output:
// @include grid-template-columns(10px grid-repeat(4, 20px) 30px);
// @include grid-template-columns(10px 20px 20px 20px 20px 30px);
@function grid-repeat($repeat, $stuff: 1fr) {
    $list: ();
    @for $i from 1 through $repeat {
        $list: append($list, $stuff, space);
    }
    @return $list;
}

@mixin grid-position($row-start, $row-end, $col-start, $col-end) {
    @include grid-column($col-start, $col-end);
    @include grid-row($row-start, $row-end);
}

@mixin grid-row($row-start, $row-end) {
    -ms-grid-row: $row-start;
    -ms-grid-row-span: $row-end - $row-start;
    grid-row: #{$row-start} / #{$row-end};
}

@mixin grid-column($col-start, $col-end) {
    -ms-grid-column: $col-start;
    -ms-grid-column-span: $col-end - $col-start;
    grid-column: #{$col-start} / #{$col-end};
}

@mixin grid-align-self($value) {
    -ms-grid-row-align: $value;
    align-self: $value;
}

@mixin grid-justify-self($value) {
    -ms-grid-column-align: $value;
    justify-self: $value;
}

@mixin border-bottom-radius($value) {
    border-bottom-right-radius: $value;
    border-bottom-left-radius: $value;
}


@mixin font-style-large {
    font-size: $f-large;
    font-weight: $bolder;
}

@mixin font-style-xl {
    font-size: $f-xl;
    font-weight: $bolder;
}

@mixin button-shared ($background-color) {
    @if $background-color {
        @include button-reset($background-color);
    }

    @include font-style-large;
    border-radius: 8px;
    padding: 1rem;
    text-align: center;
    text-decoration: none;
}

@mixin button-secondary-border {
    border: 3px solid $lightBlue;
    padding: 0;

    > span.secondaryBorder {
        border: 1px solid $buttonBlue;
        border-radius: 6px;
        display: inline-block;
        height: 100%;
        padding: 1rem;
        width: calc(100% - 2rem - 1.5px);
    }
}

@mixin button-primary($background-color) {
    @include button-shared($background-color);
    @if $background-color {
        background: $background-color;
    } @else {
        background-color: $buttonBlue;
    }
    color: $white;

    &:hover {
        background-color: $darkishBlue;
        color: $lightBlue;
    }

    &:focus {
        border: 3px solid $lightBlue;
    }

    &:active {
        background-color: $darkishBlueTwo;
    }

    &:disabled {
        background-color: $lightPink;
        color: $brownGray;
    }
}

@mixin button-secondary ($background-color) {
    @include button-shared($background-color);
    border: 1px solid $buttonBlue;
    @if $background-color {
        background: $background-color;
    } @else {
        background-color: $white;
    }
    color: $buttonBlue;

    &:hover {
        background-color: $hoverBlue;
        border: 1px solid $darkishBlue;
        color: $darkishBlue;
    }

    &:focus {
        @include button-secondary-border;
    }

    &:active {
        background-color: $loginBlue;
        border: 1px solid $darkishBlue;
        color: $darkishBlue;
    }

    &:disabled {
        background-color: $white;
        border: 1px solid $secondaryDisabledGray;
        color: $brownGray;
    }
}

@mixin button-tertiary ($background-color) {
    @include button-shared($background-color);
    @if $background-color {
        background: $background-color;
    } @else {
        background-color: $white;
    }
    color: $buttonBlue;

    &:hover {
        background-color: $hoverBlue;
        color: $darkishBlueTwo;
    }

    &:focus {
        @include button-secondary-border;
    }

    &:active {
        background-color: $white;
        color: $darkishBlueTwo;
    }

    &:disabled {
        color: $brownGray;
    }
}

@mixin tooltip {
    width: 24px;
    height: 24px;
    background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cdefs%3E%3Cstyle%3E.a,.b%7Bfill:none;stroke:currentColor;stroke-width:1.5px;%7D.a%7Bstroke-linecap:round;stroke-linejoin:round;%7D.b%7Bstroke-miterlimit:10;%7D%3C/style%3E%3C/defs%3E%3Ctitle%3Equestion-circle%3C/title%3E%3Cpath class='a' d='M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25'/%3E%3Cpath class='a' d='M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0'/%3E%3Ccircle class='b' cx='12' cy='12' r='11.25'/%3E%3C/svg%3E") no-repeat;
}

@mixin tooltip-checked {
    background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cdefs%3E%3Cstyle%3E.a%7Bfill:none;stroke:currentColor;stroke-linecap:round;stroke-linejoin:round;stroke-width:1.5px;%7D%3C/style%3E%3C/defs%3E%3Ctitle%3Edelete-1%3C/title%3E%3Ccircle class='a' cx='11.998' cy='12' r='11.25'/%3E%3Cline class='a' x1='7.498' y1='16.5' x2='16.497' y2='7.5'/%3E%3Cline class='a' x1='16.498' y1='16.5' x2='7.497' y2='7.5'/%3E%3C/svg%3E") no-repeat;
}

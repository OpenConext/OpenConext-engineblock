@use "../../skeune/stylesheets/mixins-skeune";

/*******************************************************************
    CSS shared across all pages with the default layout
 ******************************************************************/
@use 'helpers.scss';
@use "breakpoints";
@use "functions";
@use "mixins";
@use "variables";

html {
    scroll-behavior: smooth;
}

[hidden] {
    display: none;
}

body {
    align-items: center;
    background: variables.$darkishBlue;
    display: flex;
    font-family: 'SourceSansPro', sans-serif;
    font-size: 100%;
    justify-content: center;
    line-height: 1.5;
    margin: 0;
    overflow-wrap: break-word;
    word-wrap: break-word;
    word-break: break-word;

    *,
    *:before,
    *:after {
        box-sizing: border-box
    }

    * {
        @include mixins-skeune.focus;
    }

    a {
        &:hover {
            text-decoration: underline;
        }
    }

    button {
        cursor: pointer;
    }

    h2 {
        color: variables.$green;
        font-family: 'Nunito', sans-serif;
        font-size: variables.$f-h2;
        font-weight: variables.$bolder;
        line-height: 1.15;
    }

    h3 {
        color: variables.$brownishGray;
        font-family: 'Nunito', sans-serif;
        font-size: variables.$f-h3;
        font-weight: variables.$bolder;
        line-height: 1.5;
    }

    h4 {
        color: variables.$black;
        font-family: 'Nunito', sans-serif;
        font-size: variables.$f-xl;
        font-weight: variables.$bolder;
        line-height: 1.5;
    }

    h5 {
        color: variables.$brownishGray;
        font-size: variables.$f-h5;
        font-weight: variables.$normal;
        line-height: 1.5;
    }

    h6 {
        color: variables.$black;
        font-size: variables.$f-large;
        font-weight: variables.$bolder;
        line-height: 1.5;
    }

    img {
        overflow: hidden;
    }

    .page__header {
        font-family: 'Nunito', sans-serif;
    }

    .page__title {
        @include mixins.font-style-xl;
        background-color: variables.$yellow;
        color: variables.$black;
        line-height: functions.calculateRem(26px);
        margin: 0;
        padding: functions.calculateRem(26px) 2rem;

        @include breakpoints.screen('mobile') {
            padding: .8125rem 1rem;
        }

        @include breakpoints.screen('smallMobile') {
            padding: .8125rem .5rem;
        }
    }

    .page__content {
        @include mixins.border-bottom-radius(8px);
        background-color: variables.$gray;
        box-shadow: 0 3px 0 2px variables.$darkishBlueTwo;
        padding: 2rem 2rem 2.5rem;

        @include breakpoints.screen('mobile') {
            padding: 2rem 1rem 1rem;
        }

        @include breakpoints.screen('smallMobile') {
            padding: 1.5rem .5rem .5rem;
        }
    }

    > .container {
        > header {
            > h1.redirectBar,
            > p.loginBar {
                @include mixins.font-style-xl;
                background-color: variables.$darkishBlue;
                color: variables.$loginBlue;
                font-family: 'Nunito', sans-serif;
                line-height: 5rem;
                margin: 0;
                padding: 0 2rem;

                @include breakpoints.screen('mobile') {
                    @include mixins.font-style-large;
                    line-height: 3rem;
                    padding: 0 1rem;
                }

                @include breakpoints.screen('smallMobile') {
                    padding: 0 .5rem;
                }
            }
        }

        > main {
            @include mixins.border-bottom-radius(8px);
            background-color: variables.$gray;
            box-shadow: 0 3px 0 2px variables.$darkishBlueTwo;

            > header {
                h2 {
                    background-color: variables.$gray;
                    color: variables.$green;
                    font-size: variables.$f-h2;
                    font-weight: variables.$bolder;
                    line-height: 1.15;
                    margin: 0;
                    padding: 1.5rem 2rem functions.calculateRem(34px);

                    @include breakpoints.screen('mobile') {
                        padding: .75rem 1rem functions.calculateRem(17px);
                    }

                    @include breakpoints.screen('smallMobile') {
                        padding: .75rem .5rem functions.calculateRem(17px);
                    }
                }
            }
        }
    }

    // show the tooltip / modal when the input is checked
    input[type="checkbox"]:checked.modal + label + .modal__value,
    input[type="checkbox"]:checked.tooltip ~ .tooltip__value,
    input[type="checkbox"]:checked.modal + br + label + .modal__value,
    input[type="checkbox"]:checked.modal + br + label + .modal__value.animated,
    input[type="checkbox"]:checked.modal + .button--tertiary + .modal__value {
        display: block;
    }

    input[type="checkbox"]:checked.tooltip ~ .tooltip__value {
        padding: 0 1rem 1rem 0;

        @include breakpoints.screen('mobile') {
            margin: 0;
            text-align: left;
            padding: 1rem 1rem 1rem 0;
        }

        > p {
            text-align: left;
        }
    }

    .tooltip__value {
        display: none;
        text-align: left;
    }

    .modal__value.animated,
    .tooltip__value.animated {
        @include mixins.start-display-animated;
    }

    // if user agrees to animations, animate the display showing / hiding
    input[type="checkbox"]:checked.modal + label + .modal__value.animated,
    input[type="checkbox"]:checked.tooltip ~ .tooltip__value.animated,
    input[type="checkbox"]:checked.modal + br + label + .modal__value.animated,
    input[type="checkbox"]:checked.modal + .button--tertiary + .modal__value.animated {
        @include mixins.transition-display;
    }

    // set max-height for modals
    input[type="checkbox"]:checked.modal + label + .modal__value.animated,
    input[type="checkbox"]:checked.modal + br + label + .modal__value.animated,
    input[type="checkbox"]:checked.modal + .button--tertiary + .modal__value.animated {
        max-height: initial;
    }

    @include mixins.ie11Only('input[type="checkbox"]:checked.modal + label + .modal__value.animated, input[type="checkbox"]:checked.modal + br + label + .modal__value.animated, input[type="checkbox"]:checked.modal + .button--tertiary + .modal__value.animated') {
        max-height: 60vh;
    }

        // set max-height for tooltips
    input[type="checkbox"]:checked.tooltip ~ .tooltip__value.animated {
        font-weight: variables.$normal;
        max-height: initial;
    }

    @include mixins.ie11Only('input[type="checkbox"]:checked.tooltip ~ .tooltip__value.animated') {
        max-height: 40vh;
    }

    label.tooltip,
    .ie11__label > label.tooltip {
        @include mixins-skeune.tooltip;

        .expandable {
            display: inline;
        }

        .expanded {
            display: none;
        }
    }

    label.tooltip,
    label.modal,
    label[for="showMoreCheckbox"] {
        cursor: pointer;
    }

    // set arrow down for modals when closed
    label.modal {
        background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='25' height='24' viewBox='0 0 25 24'%3E%3Cdefs%3E%3Cpath id='t5vbpi1wma' d='M4.92 10.75c-.183 0-.367-.05-.528-.153-.416-.268-.517-.794-.225-1.176L8.319 4 4.18-1.422c-.292-.382-.19-.908.226-1.175.417-.268.99-.175 1.282.207l4.508 5.906c.221.291.221.678 0 .969L5.673 10.39c-.18.234-.464.359-.754.359'/%3E%3C/defs%3E%3Cg fill='none' fill-rule='evenodd' transform='translate(5.5 8)'%3E%3Cmask id='jsuhne1qsb' fill='%23fff'%3E%3Cuse xlink:href='%23t5vbpi1wma'/%3E%3C/mask%3E%3Cuse fill='%230077C8' transform='rotate(90 7.181 4)' xlink:href='%23t5vbpi1wma'/%3E%3C/g%3E%3C/svg%3E%0A") no-repeat right center;
        padding-right: 25px;
    }

    // set arrow up for modals when open
    input[type="checkbox"]:checked.modal + label,
    input[type="checkbox"]:checked.modal + br + label,
    input[type="checkbox"]:checked.modal + .ie11__label > label {
        @include mixins-skeune.closeModal;
    }

    // set cross for tooltips when opened
    input[type="checkbox"]:checked.tooltip ~ label.tooltip,
    input[type="checkbox"]:checked.tooltip ~ .ie11__label > label.tooltip {
        @include mixins-skeune.closeTooltip;

        .expandable {
            display: none;
        }

        .expanded {
            display: inline;
        }
    }

    .button--secondary,
    .button--tertiary,
    .buttonLink--secondary,
    .buttonLink--tertiary {
        &:focus {
            box-shadow: none;
            outline: none;

            > * {
                box-shadow: 0 0 0 3px variables.$lightBlue;
            }
        }
    }
}


@mixin hide
  left: -9999px
  position: absolute

@mixin hide-text
  text-indent: -100em
  overflow: hidden

@mixin retina
  @media (min--moz-device-pixel-ratio: 1.5), (-o-min-device-pixel-ratio: 3/2), (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 1.5dppx)
    @content

@mixin data-uri-bg($image, $properties: no-repeat)
  background: inline($image) $properties

@mixin max-width($width)
  @media (max-width: $width)
    @content

@mixin min-width($width)
  @media (min-width: $width)
    @content

@mixin max-height($height)
  @media (max-height: $height)
    @content

@mixin min-height($height)
  @media (min-height: $height)
    @content

@mixin calc($property, $expression)
  #{$property}: -webkit-calc(#{$expression})
  #{$property}: calc(#{$expression})

@mixin font-weight($weight)
  font-weight: if(variable-exists(font-weights), map-get($font-weights, $weight), 400)

@mixin hocus
  &:active,
  &:hover,
  &:focus
    @content

@mixin input
  input[type=text],
  input[type=email],
  input[type=number],
  input[type=date],
  input[type=time],
  textarea,
  select
    @content

@mixin margin-bottom
  margin-bottom: 30px

@mixin scrollbar($size, $foreground-color, $br-thumb:"0", $background-color:"none", $br-track:"0")
  &::-webkit-scrollbar
    width: $size
    height: $size

  &::-webkit-scrollbar-thumb
    background: $foreground-color
    border-radius: $br-thumb

  &::-webkit-scrollbar-track
    background: $background-color
    border-radius: $br-track

@mixin clearfix
  &:after
    content: ""
    display: table
    clear: both

@mixin gradient($direction, $list)
  background: -webkit-linear-gradient($direction, $list)
  background: -moz-linear-gradient($direction, $list)
  background: -o-linear-gradient($direction, $list)
  background: linear-gradient($direction, $list)

@mixin appearance($value: none)
  -moz-appearance: $value
  -webkit-appearance: $value
  appearance: $value

@mixin remove-outline
  outline: none
  &:focus
    outline: none

// Clear user-agent styles for button.
// If no background-color is set on the body element, use with a background-color.
// Else you'll see a grey background still in safari and IE.
@mixin button-reset($background-color: inherit)
  @include appearance
  background-color: $background-color
  border: 0
  font-family: inherit
  font-size: 100%
  padding: 0

@mixin select($value: none)
  -moz-user-select: $value
  -ms-user-select: $value
  -webkit-user-select: $value
  user-select: $value

// Do not use position mixin below directly, use the helpers below that
// Example usage: .sub-menu {
//  @include absolute(top 100% left 0 right 12px);
//}
$directions: top, right, bottom, left

@mixin position($position, $args)
  @each $o in $directions
    $i: index($args, $o)
    @if $i and $i + 1 <= length($args) and type-of(nth($args, $i + 1)) == number
      #{$o}: nth($args, $i + 1)
  position: $position

// Positioning helpers
@mixin absolute($args: '')
  @include position(absolute, $args)

@mixin fixed($args: '')
  @include position(fixed, $args)

@mixin relative($args: '')
  @include position(relative, $args)

// A whole lot of grid mixins below
// Ensure CSS grid works with IE 11 spec.
// sass-lint:disable no-vendor-prefixes, no-duplicate-properties
@mixin display-grid
  display: -ms-grid
  display: grid

// $rows values should be delimited by a space
@mixin grid-template-rows($rows...)
  -ms-grid-rows: $rows
  grid-template-rows: $rows

// $columns values should be delimited by a space
@mixin grid-template-columns($columns...)
  -ms-grid-columns: $columns
  grid-template-columns: $columns

// Can be used in combination with above grid-template-X mixins.
// These result in the same output:
// @include grid-template-columns(10px grid-repeat(4, 20px) 30px)
// @include grid-template-columns(10px 20px 20px 20px 20px 30px)
@function grid-repeat($repeat, $stuff: 1fr)
  $list: ()
  @for $i from 1 through $repeat
    $list: append($list, $stuff, space)
  @return $list

@mixin grid-position($row-start, $row-end, $col-start, $col-end)
  @include grid-column($col-start, $col-end)
  @include grid-row($row-start, $row-end)

@mixin grid-row($row-start, $row-end)
  -ms-grid-row: $row-start
  -ms-grid-row-span: $row-end - $row-start
  grid-row: #{$row-start} / #{$row-end}

@mixin grid-column($col-start, $col-end)
  -ms-grid-column: $col-start
  -ms-grid-column-span: $col-end - $col-start
  grid-column: #{$col-start} / #{$col-end}

@mixin grid-align-self($value)
  -ms-grid-row-align: $value
  align-self: $value

@mixin grid-justify-self($value)
  -ms-grid-column-align: $value
  justify-self: $value
